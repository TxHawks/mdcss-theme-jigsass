/* ---
section: jigSass mdcss
---

[![NPM Version][npm-img]][npm] [![Build Status][ci-img]][ci]

[jigSass mdcss] is a theme for [mdcss] based on Jonathan Neal's own
[mdcss GitHub](https://github.com/jonathantneal/mdcss-theme-github) theme.

[ci]:      https://travis-ci.org/TxHawks/mdcss-theme-jigsass
[ci-img]:  https://img.shields.io/travis/TxHawks/mdcss-theme-jigsass.svg
[npm]:     https://www.npmjs.com/package/mdcss-theme-jigsass
[npm-img]: https://img.shields.io/npm/v/mdcss-theme-jigsass.svg

[mdcss]:   https://github.com/jonathantneal/mdcss
[jigSass mdcss]: https://github.com/TxHawks/mdcss-theme-jigsass

*/

/* ---
title:   Usage
section: jigSass mdcss
---

Add [mdcss] and [jigSass mdcss] to your build tool:

```bash
npm install mdcss --save-dev
npm install mdcss-theme-jigsass --save-dev
```

Whenever [mdcss] is used, reference this theme.

```js
require('mdcss')({
	theme: require('mdcss-theme-jigsass')({ /​* options *​/ })
})
```

[mdcss]:   https://github.com/jonathantneal/mdcss
[jigSass mdcss]: https://github.com/TxHawks/mdcss-theme-jigsass

*/

/*---
title:  Options
section: jigSass mdcss
---

Options control the look and feel of the jigSass mdcss theme as well as any
iframe examples that may be used.

#### `title`

Type: `String`  
Default: `'Style Guide'`

The page title to be used by the style guide.

#### `logo`

Type: `String`  
Default: `'jigsass-logo.png'`

<img src="https://TxHawks.github.io/mdcss-theme-jigsass/demo/jigsass-logo.png" width="96" height="96">

The page logo to be used by the style guide.

#### `examples.base`

Type:    `String`  
Default: `null`

The base URL to use for all relative URLs contained within an example,
including CSS and JavaScript references.

#### `examples.target`

Type:    `String`  
Default: `'_self'`

The frame to open example hyperlinks from within an example.

#### `examples.css`

Type:    `Array`  
Default: `['style.css', 'prism-xonokay.css']`

A list of CSS files to be used by examples.

#### `examples.js`

Type:    `Array`  
Default: `null`

A list of JavaScript files to be used by examples.

#### `examples.bodyjs`

Type:    `Array`  
Default: `null`

A list of JavaScript files to be used by examples, inserted after the example.

#### `examples.htmlcss`

Type:    `String`  
Default: `'background:none;border:0;clip:auto;display:block;height:auto;margin:0;padding:0;position:static;width:auto'`

A string of styles applied to the `<html>` wrapping the example. These default
styles are used to create a seamless effect with the styleguide.

#### `examples.bodycss`

Type:    `String`  
Default: `'background:none;border:0;clip:auto;display:block;height:auto;margin:0;padding:16px;position:static;width:auto'`

A string of styles applied to the `<body>` wrapping the example. These default
styles are used to create a seamless effect with the styleguide.

*/

*,
*:before,
*:after {
	box-sizing: border-box;
}

body {
	border-left: 6px solid #09a5d9;
	margin: 0 auto;
	max-width: 1600px;
	padding: 20px 40px;
}

@media screen and (min-width: 800px) {
	body {
		display: flex;
		padding: 30px 0 90px;
	}

	header {
		flex-basis: 250px;
		padding-left: 10px;
	}

	main {
		 padding-left: 60px;
	}
}

nav > img {
	height: 90px;
	margin: 0 15px 20px;
	width: 90px;
}

/*---
title:   Examples
section: Overview
---

The `example` keyword is used by code blocks to indicate that code will be
rendered as a living example on the page.

An `example:html` code block
generates an iframe using the contents of the code block, followed by the
original code block. For example:

````css
```example:html
<button>This is a button</button>
```
````

is rendered as:

```example:html
<button>This is a button</button>
```

An `example` code block generates an iframe using the contents of the code
block without also rendering the original code block. For example:

````css
```example
<button>This is a button</button>
```
````

is rendered as:

```example
<button>This is a button</button>
```

*/

/*---
title:   Colors
section: Overview
---

Color examples are generated with `example:color` code blocks. For example:

````css
```example:color
@color: #ffffff @name: White
@color: #f8f8f8 @name: White Smoke
@color: #e7e7e7 @name: Whisper
@color: #777777 @name: Grey
@color: #565454 @name: Matterhorn
@color: #4078c0 @name: Steel Blue
@color: #333333 @name: Night Rider
```
````

is rendered as:

```example:color
@color: #ffffff @name: White
@color: #f8f8f8 @name: White Smoke
@color: #e7e7e7 @name: Whisper
@color: #777777 @name: Grey
@color: #565454 @name: Matterhorn
@color: #4078c0 @name: Steel Blue
@color: #333333 @name: Night Rider
```
*/

/*---
title:   Order
section: Overview
---
The `order` heading detail is used to control the order of sections in the generated style guide. A negative order value will shift the item before non-ordered items, while a positive order value will push the item after non-ordered values.

```css
/*---
section: First Section
order: -1
---
```

Attached to a subsection, the order detail will control the position of the subsection inside the section.

```css
/*---
title:   Last Subsection
section: Third Section
order: 1
---
```
*/

html,
body {
	background-color: #f0f0f5;
	color: #333333;
}

pre, code {
	background-color: #fff;
}

pre code {
	background-color: #fff;
}

.token.punctuation {
	color: #333333;
}

.token.tag {
	color: #218200;
}

.token.attr-name {
	color: #795da3;
}

.token.attr-value {
	color: #183691;
}

.token.function {
	color: #0086b3;
}

.token.string {
	color: #183691;
}

.token.comment {
	color: #969896;
}

.colors {
	background-color: #fff;
	display: flex;
	flex-wrap: wrap;
}

.color {
	background-color: #fff;
	border: 1px solid #ccc;
	flex-basis: 100%;
	margin: 0;
	padding: 3px;
	vertical-align: top;
}

@media (min-width: 460px) {
	.color {
		flex-basis: 33%;
	}
}

@media (min-width: 800px) {
	.color {
		flex-basis: 25%;
	}
}

.color-swatch {
	font-weight: 700;
	height: 160px;
	line-height: 160px;
	margin-bottom: 6px;
	text-align: center;
}

.color-property {
	font-size: 80%;
	font-weight: 700;
	padding: 0 12px;
}

.color-property::before {
	content: attr(data-name) ":\00a0";
	display: inline-block;
	font-weight: 300;
	min-width: 3em;
}

/*---
title:   Typography
section: Overview
---

This theme uses a common Helvetica font stack with a relative line height of
1.6 times the font size.

*/

body {
	font-family: roboto, sans-serif;
	line-height: 1.6;
}

/*---
title:   Headings
section: Typography
---

Headings match GitHub documentation conventions.

```example:html
<h1>Heading Level 1</h1>
<h2>Heading Level 2</h2>
<h3>Heading Level 3</h3>
<h4>Heading Level 4</h4>
<h5>Heading Level 5</h5>
<h6>Heading Level 6</h6>
```
*/

h1,
h2,
h3,
h4,
h5,
h6 {
	color: #09a5d9;
	font-weight: 300;
	margin-top: 1em;
	padding-bottom: .3em;
}

h4,
h5,
h6 {
	margin-bottom: 0;
}

h1 {
	font-size: 3em;
	line-height: 1.2;
	border-bottom: 1px solid;
}

h2 {
	font-size: 2.25em;
	line-height: 1.2;
	border-bottom: 1px solid;
}

h3 {
	font-size: 1.5em;
	line-height: 1.43;
	border-bottom: 1px solid;
}

h4 {
	font-size: 1.25em;
	line-height: 1.4;
}

h5, h6 {
	font-size: 1em;
	line-height: 1.4;
}

code {
	border-radius: 3px;
	display: inline-block;
	font-family: "Consolas", "Liberation Mono", "Menlo", "Courier", monospace;
	font-size: 85%;
	margin: -.1em 0;
	max-width: 100%;
	overflow: auto;
	padding: .1em;
	vertical-align: text-top;
}

button {
	background-color: #09a5d9;
	border: 0;
	color: #fff;
	cursor: pointer;
	display: inline-block;
	font-size: 1rem;
	font-weight: 300;
	line-height: 1.538462;
	outline: 0;
	padding: 6px 12px;
	vertical-align: middle;
	white-space: nowrap;
}

button:active.
button:focus, 
button:hover {
	background-color: #067194;
	box-shadow: inset 0 2px 5px rga(0,0,0,0.25);
	color: #000;
	transition: all 0.25s ease-out;
}

/*---
title:   Iconography
section: Overview
---

This theme uses no iconography.

*/

/*---
title: Layout
---

We use flex to horizontally stack the heading and main content areas.
The navigation remains fixed while you scroll.

*/

@media screen and (min-width: 800px) {
	main {
		width: calc(100% - 250px);
	}
}

main > section {
	margin-bottom: 80px;
}

figure,
p {
	margin: 0 0 1rem;
}

p, ul {
	max-width: 45em;
}

ul {
	margin-top: 0;
}

figure {
	overflow: auto;
	-webkit-overflow-scroll: touch;
}

pre {
	margin: 0;
	overflow: auto;
	-webkit-overflow-scroll: touch;
}

@media screen and (min-width: 641px) {
	pre {
		max-width: calc(100vw - 230px - 90px);
	}
}

pre code {
	display: block;
	line-height: 1.45;
	margin: 1em;
	white-space: pre;
}

iframe {
	display: block;
	border: 0;
	height: 0;
	margin: 0;
	width: 100%;
}

hr {
	background-color: #e7e7e7;
	border: 0 none;
	height: 4px;
	margin: 1rem 0;
	padding: 0;
}

a {
	color: #067194;
	cursor: pointer;
	text-decoration: none;
}

footer {
	background-color: #353535;
	color: #ccc;
	font-size: .75rem;
	padding: 6px;
}

a:active,
a:focus,
a:hover {
	text-decoration: underline;
}

@media (min-width: 50em) {
	nav {
		position: fixed;
		width: calc(250px - 30px);
	}

	nav > ul {
		max-height: calc(100vh - 150px);
		overflow-y: scroll;
	}
}

nav ul {
	list-style: none;
	margin: 0;
	padding: 0;
}

nav > ul {
	-webkit-overflow-scrolling: touch;
	padding-bottom: 20px;
}

nav a {
	color: #09a5d9;
	display: block;
	font-size: .875rem;
	line-height: 1.2;
	padding: 5px 25px;
	transition: all .25s ease-out;
}

nav a:hover,
nav a:focus {
	text-decoration: none;
}

nav > ul > li {
	margin-bottom: 20px;
}

nav > ul > li > a {
	color: #09a5d9;
	font-size: 1.3rem;
	font-weight: 300;
	letter-spacing: .025em;
	line-height: 1.5;
	overflow: hidden;
	text-transform: uppercase;
	padding: 5px 25px;
	text-overflow: ellipsis;
}

nav > ul > li > a:hover,
nav > ul > li > a:focus {
	color: #09a5d9;
}

nav > ul > li > a > span {
	box-shadow: 0 1px 0 0 rgba(0,0,0,.1);
}

nav  ul  li  a:hover span {
	box-shadow: 0 3px 0 0 rgba(9, 165, 217, .4);
}

/*---
title: Visual Language
---

This is just a sample section. Lorem ipsum dolor sit amet, consectetur
adipisicing elit. Reiciendis asperiores temporibus beatae fugit totam pariatur,
aliquam commodi consequuntur id error ipsam suscipit quas doloremque
perferendis quam! Ullam, debitis ab maiores.

```html
<form class="a-particularly-long-class-name">
	<fieldset class="control-group">
		<input class="control-input" type="text" value="A particularly long value for an input control">
	</fieldset>
</form>
```

*/

/*---
title:   Hero
section: Visual Language
---

This is just a sample section. Lorem ipsum dolor sit amet, consectetur
adipisicing elit. Reiciendis asperiores temporibus beatae fugit totam pariatur,
aliquam commodi consequuntur id error ipsam suscipit quas doloremque
perferendis quam! Ullam, debitis ab maiores.

*/

/*---
title:   Figure
section: Visual Language
---

This is just a sample section. Lorem ipsum dolor sit amet, consectetur
adipisicing elit. Reiciendis asperiores temporibus beatae fugit totam pariatur,
aliquam commodi consequuntur id error ipsam suscipit quas doloremque
perferendis quam! Ullam, debitis ab maiores.

*/

/*---
title:   Blockquote
section: Visual Language
---

This is just a sample section. Lorem ipsum dolor sit amet, consectetur
adipisicing elit. Reiciendis asperiores temporibus beatae fugit totam pariatur,
aliquam commodi consequuntur id error ipsam suscipit quas doloremque
perferendis quam! Ullam, debitis ab maiores.

*/

/*---
title:   Media
section: Visual Language
---

This is just a sample section. Lorem ipsum dolor sit amet, consectetur
adipisicing elit. Reiciendis asperiores temporibus beatae fugit totam pariatur,
aliquam commodi consequuntur id error ipsam suscipit quas doloremque
perferendis quam! Ullam, debitis ab maiores.

*/

/*---
title:   Aspect
section: Visual Language
order:   -1
---

This is just a sample section. Lorem ipsum dolor sit amet, consectetur
adipisicing elit. Reiciendis asperiores temporibus beatae fugit totam pariatur,
aliquam commodi consequuntur id error ipsam suscipit quas doloremque
perferendis quam! Ullam, debitis ab maiores.

*/

:root {
	background-color: #f0f0f5;
}
